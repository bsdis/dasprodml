<?xml version="1.0" encoding="utf-8"?>
<xs:schema targetNamespace="http://www.energistics.org/energyml/data/prodmlv2" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:prodml="http://www.energistics.org/energyml/data/prodmlv2" xmlns:eml="http://www.energistics.org/energyml/data/commonv2" elementFormDefault="qualified" version="2.0">
	<!--														-->
	<!-- Energistics License Agreement
			This file is distributed under the Energistics Product License Agreement at
			http://www.energistics.org/product-license-agreement
			Use of this file constitutes agreement with the Energistics Product License Agreement.
			Copyright (c) 2017 Energistics. All rights reserved.
			Energistics, WITSML, PRODML and RESQML are trademarks or registered trademarks of Energistics.
			-->
	<!--														-->
	<xs:annotation>
		<xs:documentation>Intended for use in transferring time series of data, e.g. from a historian. Describes a context-free, time-based series of measurement data for the purpose of targeted exchanges between consumers and providers of data services. It is intended for use in support of smart fields or high-frequency historian type interactions, not reporting. It provides a "flat‚Äù view of the data and uses a set of keyword-value pairs to define the business identity of the series, as described in the following generalized hierarchy.
For more information, see the PRODML Technical Usage Guide and  PRODML Product Volume, Network Model &amp; Time Series Usage Guide (which are included in the zip file download of the PRODML standard). </xs:documentation>
	</xs:annotation>
	<!--														-->
	<xs:import namespace="http://www.energistics.org/energyml/data/commonv2" schemaLocation="../../../common/v2.1/xsd_schemas/EmlAllObjects.xsd"/>
	<!--														-->
	<xs:include schemaLocation="ProdmlCommon.xsd"/>
	<xs:complexType name="AbstractValue" abstract="true">
		<xs:annotation>
			<xs:documentation>The abstract base type of value. </xs:documentation>
		</xs:annotation>
		<xs:sequence/>
	</xs:complexType>
	<xs:complexType name="DoubleValue">
		<xs:annotation>
			<xs:documentation>A single double value in the time series.</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="prodml:AbstractValue">
				<xs:sequence>
					<xs:element name="DoubleValue" type="prodml:TimeSeriesDoubleSample" minOccurs="1" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>A single double value in the time series.</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="StringValue">
		<xs:annotation>
			<xs:documentation>A single string value in the time series.</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="prodml:AbstractValue">
				<xs:sequence>
					<xs:element name="StringValue" type="prodml:TimeSeriesStringSample" minOccurs="1" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>A single string value in the time series.</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:element name="TimeSeriesData" type="prodml:TimeSeriesData" substitutionGroup="eml:AbstractDataObject"/>
	<xs:complexType name="TimeSeriesData">
		<xs:annotation>
			<xs:documentation>Defines the time series data being transferred. </xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="eml:AbstractObject">
				<xs:sequence>
					<xs:element name="Key" type="prodml:KeywordValueStruct" minOccurs="0" maxOccurs="unbounded">
						<xs:annotation>
							<xs:documentation>A keyword value pair which characterizes the underlying nature of this value. The key value may provide part of the unique identity of an instance of a concept or it may characterize the underlying concept. The key value is defined within the specified keyword-naming system. This is essentially a classification of the data in the specified system (keyword).</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="Unit" type="eml:UomEnum" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>If the time series is a measure, then this specifies the unit of measure. The unit acronym must be chosen from the list that is valid for the measure class. If this is specified,  then the measure class must be specified.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="MeasureClass" type="eml:MeasureClass" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Defines the type of measure that the time series represents. If this is specified then unit must be specified. This may be redundant to some information in the keys, but it is important for allowing an application to understand the nature of a measure value, even if it does not understand all of the underlying nature.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="Comment" type="eml:String2000" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>A comment about the time series.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="DataValue" type="prodml:AbstractValue" minOccurs="0" maxOccurs="unbounded"/>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="TimeSeriesDoubleSample">
		<xs:annotation>
			<xs:documentation>A single double value in a time series.</xs:documentation>
		</xs:annotation>
		<xs:simpleContent>
			<xs:extension base="eml:AbstractMeasure">
				<xs:attribute name="dTim" use="optional" type="xs:dateTime">
					<xs:annotation>
						<xs:documentation>The date and time at which the value applies. If no time is specified then the value is static and only one sample can be defined. Either dTim or value or both must be specified. If the status attribute is absent and the value is not "NaN", the data value can be assumed to be good with no restrictions.</xs:documentation>
					</xs:annotation>
				</xs:attribute>
				<xs:attribute name="status" use="optional" type="prodml:ValueStatus">
					<xs:annotation>
						<xs:documentation>An indicator of the quality of the value.</xs:documentation>
					</xs:annotation>
				</xs:attribute>
			</xs:extension>
		</xs:simpleContent>
	</xs:complexType>
	<xs:complexType name="TimeSeriesStringSample">
		<xs:annotation>
			<xs:documentation>A single string value in a time series.</xs:documentation>
		</xs:annotation>
		<xs:simpleContent>
			<xs:extension base="eml:AbstractString">
				<xs:attribute name="dTim" use="optional" type="xs:dateTime">
					<xs:annotation>
						<xs:documentation>The date and time at which the value applies. If no time is specified then the value is static and only one sample can be defined. Either dTim or value or both must be specified. If the status attribute is absent and the value is not "NaN", the data value can be assumed to be good with no restrictions.</xs:documentation>
					</xs:annotation>
				</xs:attribute>
			</xs:extension>
		</xs:simpleContent>
	</xs:complexType>
</xs:schema>
